type Chef {
  _id: ID!
  userProfile: User!
  likes: [Int]
  # Can't specify an empty array in GraphQL type
  # reviews will be an array of strings for now
  chefReviews: [Review]
  chefDishes: [Dish]
  location: Location
  neighborhood: ID!
  address: Address!
  rating: Int
}


type Location {
  geo_lat: Float,
  geo_lng: Float,
}

input LocationInput {
  geo_lat: Float,
  geo_lng: Float,
}

type Address {
  streetNumber: String,
  city: String,
  state: String,
  postalCode: String
}

input AddressInput {
  streetNumber: String,
  city: String,
  state: String,
  postalCode: String
}


extend type Query {
  getSingleChef(chefID: ID!): Chef!
  # Finds Chefs in a Neighborhood and filtrs by bounding box.
  findChefsInRange(geoCoords: LocationInput!): [Chef]!
  # Finds Chefs by Style then filters results by geoCoords.
  findChefsByStyle(geoCoords: LocationInput!, cuisineType: String!): [Chef]!
}





