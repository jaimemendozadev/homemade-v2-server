"""
ToDo: Optimize chefId, OrderId, & resolvers 
to prevent over-resolving and killing the Database.
"""
type Review {
  _id: ID
  reviewText: String
  # rating will be an integer ranging from 0 - 10
  rating: Int
  # chefId resolves to Chef info.
  chefId: Chef!
  # orderId resolves to the Order attached to the Review.
  orderId: Order!
  # customerId resolves to the User attached to the Review.
  customerId: User!
  date: String
}


input ReviewInput {
  reviewText: String!
  rating: Int!
  chefId: ID!
  orderId: ID!
  customerId: ID!
  date: String  
}



extend type Query {
  getChefReviews(chefID: ID!): [Review]!
}


#ToDo: Work on Chef Review after fixing Order Schema
extend type Mutation {
  postChefReview(incomingReview: ReviewInput!): [Review!]!
}