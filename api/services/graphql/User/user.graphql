type User {
  _id: ID!
  firstName: String!
  lastName: String!
  bio: String
  status: String
  phoneNumber: String!
  profileUrl: String
  signatureURL: String
  email: String!
  chefProfile: Chef
}



input UserPayload {
  firstName: String!
  lastName: String!
  bio: String
  status: String
  phoneNumber: String!
  profileUrl: String
  signatureURL: String
  email: String!
}

type Query {
  getUser(userID: String!): User!
}

type Mutation {
  createUser(body: UserPayload!): User!
  updateUser(authID: String!): [User]!
  addSignature(authID: String!): String!
}

# ToDo: Possibly Implement Twilio
# Twilio: textChef
